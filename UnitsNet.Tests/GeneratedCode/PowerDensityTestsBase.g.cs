//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;
using System.Linq;
using UnitsNet.Units;
using Xunit;

// Disable build warning CS1718: Comparison made to same variable; did you mean to compare something else?
#pragma warning disable 1718

// ReSharper disable once CheckNamespace
namespace UnitsNet.Tests
{
    /// <summary>
    /// Test of PowerDensity.
    /// </summary>
// ReSharper disable once PartialTypeWithSinglePart
    public abstract partial class PowerDensityTestsBase
    {
        protected abstract double DecawattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double DecawattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double DecawattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double DecawattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double DeciwattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double DeciwattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double DeciwattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double DeciwattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double GigawattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double GigawattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double GigawattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double GigawattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double KilowattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double KilowattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double KilowattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double KilowattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double MegawattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double MegawattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double MegawattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double MegawattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double MicrowattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double MicrowattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double MicrowattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double MicrowattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double MilliwattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double MilliwattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double MilliwattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double MilliwattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double NanowattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double NanowattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double NanowattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double NanowattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double PicowattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double PicowattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double PicowattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double PicowattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double TerawattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double TerawattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double TerawattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double TerawattsPerLiterInOneWattPerCubicMeter { get; }
        protected abstract double WattsPerCubicFootInOneWattPerCubicMeter { get; }
        protected abstract double WattsPerCubicInchInOneWattPerCubicMeter { get; }
        protected abstract double WattsPerCubicMeterInOneWattPerCubicMeter { get; }
        protected abstract double WattsPerLiterInOneWattPerCubicMeter { get; }

// ReSharper disable VirtualMemberNeverOverriden.Global
        protected virtual double DecawattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double DecawattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double DecawattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double DecawattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double DeciwattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double DeciwattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double DeciwattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double DeciwattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double GigawattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double GigawattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double GigawattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double GigawattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double KilowattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double KilowattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double KilowattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double KilowattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double MegawattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double MegawattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double MegawattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double MegawattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double MicrowattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double MicrowattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double MicrowattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double MicrowattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double MilliwattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double MilliwattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double MilliwattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double MilliwattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double NanowattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double NanowattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double NanowattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double NanowattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double PicowattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double PicowattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double PicowattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double PicowattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double TerawattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double TerawattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double TerawattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double TerawattsPerLiterTolerance { get { return 1e-5; } }
        protected virtual double WattsPerCubicFootTolerance { get { return 1e-5; } }
        protected virtual double WattsPerCubicInchTolerance { get { return 1e-5; } }
        protected virtual double WattsPerCubicMeterTolerance { get { return 1e-5; } }
        protected virtual double WattsPerLiterTolerance { get { return 1e-5; } }
// ReSharper restore VirtualMemberNeverOverriden.Global

        [Fact]
        public void Ctor_WithUndefinedUnit_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new PowerDensity((double)0.0, PowerDensityUnit.Undefined));
        }

        [Fact]
        public void Ctor_WithInfinityValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new PowerDensity(double.PositiveInfinity, PowerDensityUnit.WattPerCubicMeter));
            Assert.Throws<ArgumentException>(() => new PowerDensity(double.NegativeInfinity, PowerDensityUnit.WattPerCubicMeter));
        }

        [Fact]
        public void Ctor_WithNaNValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new PowerDensity(double.NaN, PowerDensityUnit.WattPerCubicMeter));
        }

        [Fact]
        public void Ctor_UnitSystem_ThrowsArgumentExceptionIfNotSupported()
        {
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.SI));
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.CGS));
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.BI));
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.EE));
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.USC));
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.FPS));
            Assert.Throws<ArgumentException>(() => new PowerDensity(1, UnitSystem.Astronomical));
        }

        [Fact]
        public void Ctor_WithNullUnitSystem_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(() => new PowerDensity(1, null));
        }

        [Fact]
        public void WattPerCubicMeterToPowerDensityUnits()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            AssertEx.EqualTolerance(DecawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.DecawattsPerCubicFoot, DecawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(DecawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.DecawattsPerCubicInch, DecawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(DecawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.DecawattsPerCubicMeter, DecawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(DecawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.DecawattsPerLiter, DecawattsPerLiterTolerance);
            AssertEx.EqualTolerance(DeciwattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.DeciwattsPerCubicFoot, DeciwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(DeciwattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.DeciwattsPerCubicInch, DeciwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(DeciwattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.DeciwattsPerCubicMeter, DeciwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(DeciwattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.DeciwattsPerLiter, DeciwattsPerLiterTolerance);
            AssertEx.EqualTolerance(GigawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.GigawattsPerCubicFoot, GigawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(GigawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.GigawattsPerCubicInch, GigawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(GigawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.GigawattsPerCubicMeter, GigawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(GigawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.GigawattsPerLiter, GigawattsPerLiterTolerance);
            AssertEx.EqualTolerance(KilowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.KilowattsPerCubicFoot, KilowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(KilowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.KilowattsPerCubicInch, KilowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(KilowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.KilowattsPerCubicMeter, KilowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(KilowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.KilowattsPerLiter, KilowattsPerLiterTolerance);
            AssertEx.EqualTolerance(MegawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.MegawattsPerCubicFoot, MegawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(MegawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.MegawattsPerCubicInch, MegawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(MegawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.MegawattsPerCubicMeter, MegawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(MegawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.MegawattsPerLiter, MegawattsPerLiterTolerance);
            AssertEx.EqualTolerance(MicrowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.MicrowattsPerCubicFoot, MicrowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(MicrowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.MicrowattsPerCubicInch, MicrowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(MicrowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.MicrowattsPerCubicMeter, MicrowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(MicrowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.MicrowattsPerLiter, MicrowattsPerLiterTolerance);
            AssertEx.EqualTolerance(MilliwattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.MilliwattsPerCubicFoot, MilliwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(MilliwattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.MilliwattsPerCubicInch, MilliwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(MilliwattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.MilliwattsPerCubicMeter, MilliwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(MilliwattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.MilliwattsPerLiter, MilliwattsPerLiterTolerance);
            AssertEx.EqualTolerance(NanowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.NanowattsPerCubicFoot, NanowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(NanowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.NanowattsPerCubicInch, NanowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(NanowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.NanowattsPerCubicMeter, NanowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(NanowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.NanowattsPerLiter, NanowattsPerLiterTolerance);
            AssertEx.EqualTolerance(PicowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.PicowattsPerCubicFoot, PicowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(PicowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.PicowattsPerCubicInch, PicowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(PicowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.PicowattsPerCubicMeter, PicowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(PicowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.PicowattsPerLiter, PicowattsPerLiterTolerance);
            AssertEx.EqualTolerance(TerawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.TerawattsPerCubicFoot, TerawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(TerawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.TerawattsPerCubicInch, TerawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(TerawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.TerawattsPerCubicMeter, TerawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(TerawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.TerawattsPerLiter, TerawattsPerLiterTolerance);
            AssertEx.EqualTolerance(WattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.WattsPerCubicFoot, WattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(WattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.WattsPerCubicInch, WattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(WattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(WattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.WattsPerLiter, WattsPerLiterTolerance);
        }

        [Fact]
        public void FromValueAndUnit()
        {
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DecawattPerCubicFoot).DecawattsPerCubicFoot, DecawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DecawattPerCubicInch).DecawattsPerCubicInch, DecawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DecawattPerCubicMeter).DecawattsPerCubicMeter, DecawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DecawattPerLiter).DecawattsPerLiter, DecawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DeciwattPerCubicFoot).DeciwattsPerCubicFoot, DeciwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DeciwattPerCubicInch).DeciwattsPerCubicInch, DeciwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DeciwattPerCubicMeter).DeciwattsPerCubicMeter, DeciwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.DeciwattPerLiter).DeciwattsPerLiter, DeciwattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.GigawattPerCubicFoot).GigawattsPerCubicFoot, GigawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.GigawattPerCubicInch).GigawattsPerCubicInch, GigawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.GigawattPerCubicMeter).GigawattsPerCubicMeter, GigawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.GigawattPerLiter).GigawattsPerLiter, GigawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.KilowattPerCubicFoot).KilowattsPerCubicFoot, KilowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.KilowattPerCubicInch).KilowattsPerCubicInch, KilowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.KilowattPerCubicMeter).KilowattsPerCubicMeter, KilowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.KilowattPerLiter).KilowattsPerLiter, KilowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MegawattPerCubicFoot).MegawattsPerCubicFoot, MegawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MegawattPerCubicInch).MegawattsPerCubicInch, MegawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MegawattPerCubicMeter).MegawattsPerCubicMeter, MegawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MegawattPerLiter).MegawattsPerLiter, MegawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MicrowattPerCubicFoot).MicrowattsPerCubicFoot, MicrowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MicrowattPerCubicInch).MicrowattsPerCubicInch, MicrowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MicrowattPerCubicMeter).MicrowattsPerCubicMeter, MicrowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MicrowattPerLiter).MicrowattsPerLiter, MicrowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MilliwattPerCubicFoot).MilliwattsPerCubicFoot, MilliwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MilliwattPerCubicInch).MilliwattsPerCubicInch, MilliwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MilliwattPerCubicMeter).MilliwattsPerCubicMeter, MilliwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.MilliwattPerLiter).MilliwattsPerLiter, MilliwattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.NanowattPerCubicFoot).NanowattsPerCubicFoot, NanowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.NanowattPerCubicInch).NanowattsPerCubicInch, NanowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.NanowattPerCubicMeter).NanowattsPerCubicMeter, NanowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.NanowattPerLiter).NanowattsPerLiter, NanowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.PicowattPerCubicFoot).PicowattsPerCubicFoot, PicowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.PicowattPerCubicInch).PicowattsPerCubicInch, PicowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.PicowattPerCubicMeter).PicowattsPerCubicMeter, PicowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.PicowattPerLiter).PicowattsPerLiter, PicowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.TerawattPerCubicFoot).TerawattsPerCubicFoot, TerawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.TerawattPerCubicInch).TerawattsPerCubicInch, TerawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.TerawattPerCubicMeter).TerawattsPerCubicMeter, TerawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.TerawattPerLiter).TerawattsPerLiter, TerawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.WattPerCubicFoot).WattsPerCubicFoot, WattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.WattPerCubicInch).WattsPerCubicInch, WattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.WattPerCubicMeter).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.From(1, PowerDensityUnit.WattPerLiter).WattsPerLiter, WattsPerLiterTolerance);
        }

        [Fact]
        public void FromWattsPerCubicMeter_WithInfinityValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => PowerDensity.FromWattsPerCubicMeter(double.PositiveInfinity));
            Assert.Throws<ArgumentException>(() => PowerDensity.FromWattsPerCubicMeter(double.NegativeInfinity));
        }

        [Fact]
        public void FromWattsPerCubicMeter_WithNanValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => PowerDensity.FromWattsPerCubicMeter(double.NaN));
        }

        [Fact]
        public void As()
        {
            var wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            AssertEx.EqualTolerance(DecawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DecawattPerCubicFoot), DecawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(DecawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DecawattPerCubicInch), DecawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(DecawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DecawattPerCubicMeter), DecawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(DecawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DecawattPerLiter), DecawattsPerLiterTolerance);
            AssertEx.EqualTolerance(DeciwattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DeciwattPerCubicFoot), DeciwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(DeciwattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DeciwattPerCubicInch), DeciwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(DeciwattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DeciwattPerCubicMeter), DeciwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(DeciwattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.DeciwattPerLiter), DeciwattsPerLiterTolerance);
            AssertEx.EqualTolerance(GigawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.GigawattPerCubicFoot), GigawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(GigawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.GigawattPerCubicInch), GigawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(GigawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.GigawattPerCubicMeter), GigawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(GigawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.GigawattPerLiter), GigawattsPerLiterTolerance);
            AssertEx.EqualTolerance(KilowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.KilowattPerCubicFoot), KilowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(KilowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.KilowattPerCubicInch), KilowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(KilowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.KilowattPerCubicMeter), KilowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(KilowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.KilowattPerLiter), KilowattsPerLiterTolerance);
            AssertEx.EqualTolerance(MegawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MegawattPerCubicFoot), MegawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(MegawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MegawattPerCubicInch), MegawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(MegawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MegawattPerCubicMeter), MegawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(MegawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MegawattPerLiter), MegawattsPerLiterTolerance);
            AssertEx.EqualTolerance(MicrowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MicrowattPerCubicFoot), MicrowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(MicrowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MicrowattPerCubicInch), MicrowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(MicrowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MicrowattPerCubicMeter), MicrowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(MicrowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MicrowattPerLiter), MicrowattsPerLiterTolerance);
            AssertEx.EqualTolerance(MilliwattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MilliwattPerCubicFoot), MilliwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(MilliwattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MilliwattPerCubicInch), MilliwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(MilliwattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MilliwattPerCubicMeter), MilliwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(MilliwattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.MilliwattPerLiter), MilliwattsPerLiterTolerance);
            AssertEx.EqualTolerance(NanowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.NanowattPerCubicFoot), NanowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(NanowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.NanowattPerCubicInch), NanowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(NanowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.NanowattPerCubicMeter), NanowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(NanowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.NanowattPerLiter), NanowattsPerLiterTolerance);
            AssertEx.EqualTolerance(PicowattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.PicowattPerCubicFoot), PicowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(PicowattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.PicowattPerCubicInch), PicowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(PicowattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.PicowattPerCubicMeter), PicowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(PicowattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.PicowattPerLiter), PicowattsPerLiterTolerance);
            AssertEx.EqualTolerance(TerawattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.TerawattPerCubicFoot), TerawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(TerawattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.TerawattPerCubicInch), TerawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(TerawattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.TerawattPerCubicMeter), TerawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(TerawattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.TerawattPerLiter), TerawattsPerLiterTolerance);
            AssertEx.EqualTolerance(WattsPerCubicFootInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.WattPerCubicFoot), WattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(WattsPerCubicInchInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.WattPerCubicInch), WattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(WattsPerCubicMeterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.WattPerCubicMeter), WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(WattsPerLiterInOneWattPerCubicMeter, wattpercubicmeter.As(PowerDensityUnit.WattPerLiter), WattsPerLiterTolerance);
        }

        [Fact]
        public void As_UnitSystem_ThrowsArgumentExceptionIfNotSupported()
        {
            var wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);

            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.SI));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.CGS));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.BI));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.EE));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.USC));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.FPS));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.As(UnitSystem.Astronomical));
        }

        [Fact]
        public void As_WithNullUnitSystem_ThrowsArgumentNullException()
        {
            var wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
 
            Assert.Throws<ArgumentNullException>(() => wattpercubicmeter.As(null));
        }

        [Fact]
        public void ToUnit()
        {
            var wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);

            var decawattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DecawattPerCubicFoot);
            AssertEx.EqualTolerance(DecawattsPerCubicFootInOneWattPerCubicMeter, (double)decawattpercubicfootQuantity.Value, DecawattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.DecawattPerCubicFoot, decawattpercubicfootQuantity.Unit);

            var decawattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DecawattPerCubicInch);
            AssertEx.EqualTolerance(DecawattsPerCubicInchInOneWattPerCubicMeter, (double)decawattpercubicinchQuantity.Value, DecawattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.DecawattPerCubicInch, decawattpercubicinchQuantity.Unit);

            var decawattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DecawattPerCubicMeter);
            AssertEx.EqualTolerance(DecawattsPerCubicMeterInOneWattPerCubicMeter, (double)decawattpercubicmeterQuantity.Value, DecawattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.DecawattPerCubicMeter, decawattpercubicmeterQuantity.Unit);

            var decawattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DecawattPerLiter);
            AssertEx.EqualTolerance(DecawattsPerLiterInOneWattPerCubicMeter, (double)decawattperliterQuantity.Value, DecawattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.DecawattPerLiter, decawattperliterQuantity.Unit);

            var deciwattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DeciwattPerCubicFoot);
            AssertEx.EqualTolerance(DeciwattsPerCubicFootInOneWattPerCubicMeter, (double)deciwattpercubicfootQuantity.Value, DeciwattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.DeciwattPerCubicFoot, deciwattpercubicfootQuantity.Unit);

            var deciwattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DeciwattPerCubicInch);
            AssertEx.EqualTolerance(DeciwattsPerCubicInchInOneWattPerCubicMeter, (double)deciwattpercubicinchQuantity.Value, DeciwattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.DeciwattPerCubicInch, deciwattpercubicinchQuantity.Unit);

            var deciwattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DeciwattPerCubicMeter);
            AssertEx.EqualTolerance(DeciwattsPerCubicMeterInOneWattPerCubicMeter, (double)deciwattpercubicmeterQuantity.Value, DeciwattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.DeciwattPerCubicMeter, deciwattpercubicmeterQuantity.Unit);

            var deciwattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.DeciwattPerLiter);
            AssertEx.EqualTolerance(DeciwattsPerLiterInOneWattPerCubicMeter, (double)deciwattperliterQuantity.Value, DeciwattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.DeciwattPerLiter, deciwattperliterQuantity.Unit);

            var gigawattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.GigawattPerCubicFoot);
            AssertEx.EqualTolerance(GigawattsPerCubicFootInOneWattPerCubicMeter, (double)gigawattpercubicfootQuantity.Value, GigawattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.GigawattPerCubicFoot, gigawattpercubicfootQuantity.Unit);

            var gigawattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.GigawattPerCubicInch);
            AssertEx.EqualTolerance(GigawattsPerCubicInchInOneWattPerCubicMeter, (double)gigawattpercubicinchQuantity.Value, GigawattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.GigawattPerCubicInch, gigawattpercubicinchQuantity.Unit);

            var gigawattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.GigawattPerCubicMeter);
            AssertEx.EqualTolerance(GigawattsPerCubicMeterInOneWattPerCubicMeter, (double)gigawattpercubicmeterQuantity.Value, GigawattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.GigawattPerCubicMeter, gigawattpercubicmeterQuantity.Unit);

            var gigawattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.GigawattPerLiter);
            AssertEx.EqualTolerance(GigawattsPerLiterInOneWattPerCubicMeter, (double)gigawattperliterQuantity.Value, GigawattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.GigawattPerLiter, gigawattperliterQuantity.Unit);

            var kilowattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.KilowattPerCubicFoot);
            AssertEx.EqualTolerance(KilowattsPerCubicFootInOneWattPerCubicMeter, (double)kilowattpercubicfootQuantity.Value, KilowattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.KilowattPerCubicFoot, kilowattpercubicfootQuantity.Unit);

            var kilowattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.KilowattPerCubicInch);
            AssertEx.EqualTolerance(KilowattsPerCubicInchInOneWattPerCubicMeter, (double)kilowattpercubicinchQuantity.Value, KilowattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.KilowattPerCubicInch, kilowattpercubicinchQuantity.Unit);

            var kilowattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.KilowattPerCubicMeter);
            AssertEx.EqualTolerance(KilowattsPerCubicMeterInOneWattPerCubicMeter, (double)kilowattpercubicmeterQuantity.Value, KilowattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.KilowattPerCubicMeter, kilowattpercubicmeterQuantity.Unit);

            var kilowattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.KilowattPerLiter);
            AssertEx.EqualTolerance(KilowattsPerLiterInOneWattPerCubicMeter, (double)kilowattperliterQuantity.Value, KilowattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.KilowattPerLiter, kilowattperliterQuantity.Unit);

            var megawattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MegawattPerCubicFoot);
            AssertEx.EqualTolerance(MegawattsPerCubicFootInOneWattPerCubicMeter, (double)megawattpercubicfootQuantity.Value, MegawattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.MegawattPerCubicFoot, megawattpercubicfootQuantity.Unit);

            var megawattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MegawattPerCubicInch);
            AssertEx.EqualTolerance(MegawattsPerCubicInchInOneWattPerCubicMeter, (double)megawattpercubicinchQuantity.Value, MegawattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.MegawattPerCubicInch, megawattpercubicinchQuantity.Unit);

            var megawattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MegawattPerCubicMeter);
            AssertEx.EqualTolerance(MegawattsPerCubicMeterInOneWattPerCubicMeter, (double)megawattpercubicmeterQuantity.Value, MegawattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.MegawattPerCubicMeter, megawattpercubicmeterQuantity.Unit);

            var megawattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MegawattPerLiter);
            AssertEx.EqualTolerance(MegawattsPerLiterInOneWattPerCubicMeter, (double)megawattperliterQuantity.Value, MegawattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.MegawattPerLiter, megawattperliterQuantity.Unit);

            var microwattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MicrowattPerCubicFoot);
            AssertEx.EqualTolerance(MicrowattsPerCubicFootInOneWattPerCubicMeter, (double)microwattpercubicfootQuantity.Value, MicrowattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.MicrowattPerCubicFoot, microwattpercubicfootQuantity.Unit);

            var microwattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MicrowattPerCubicInch);
            AssertEx.EqualTolerance(MicrowattsPerCubicInchInOneWattPerCubicMeter, (double)microwattpercubicinchQuantity.Value, MicrowattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.MicrowattPerCubicInch, microwattpercubicinchQuantity.Unit);

            var microwattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MicrowattPerCubicMeter);
            AssertEx.EqualTolerance(MicrowattsPerCubicMeterInOneWattPerCubicMeter, (double)microwattpercubicmeterQuantity.Value, MicrowattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.MicrowattPerCubicMeter, microwattpercubicmeterQuantity.Unit);

            var microwattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MicrowattPerLiter);
            AssertEx.EqualTolerance(MicrowattsPerLiterInOneWattPerCubicMeter, (double)microwattperliterQuantity.Value, MicrowattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.MicrowattPerLiter, microwattperliterQuantity.Unit);

            var milliwattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MilliwattPerCubicFoot);
            AssertEx.EqualTolerance(MilliwattsPerCubicFootInOneWattPerCubicMeter, (double)milliwattpercubicfootQuantity.Value, MilliwattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.MilliwattPerCubicFoot, milliwattpercubicfootQuantity.Unit);

            var milliwattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MilliwattPerCubicInch);
            AssertEx.EqualTolerance(MilliwattsPerCubicInchInOneWattPerCubicMeter, (double)milliwattpercubicinchQuantity.Value, MilliwattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.MilliwattPerCubicInch, milliwattpercubicinchQuantity.Unit);

            var milliwattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MilliwattPerCubicMeter);
            AssertEx.EqualTolerance(MilliwattsPerCubicMeterInOneWattPerCubicMeter, (double)milliwattpercubicmeterQuantity.Value, MilliwattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.MilliwattPerCubicMeter, milliwattpercubicmeterQuantity.Unit);

            var milliwattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.MilliwattPerLiter);
            AssertEx.EqualTolerance(MilliwattsPerLiterInOneWattPerCubicMeter, (double)milliwattperliterQuantity.Value, MilliwattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.MilliwattPerLiter, milliwattperliterQuantity.Unit);

            var nanowattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.NanowattPerCubicFoot);
            AssertEx.EqualTolerance(NanowattsPerCubicFootInOneWattPerCubicMeter, (double)nanowattpercubicfootQuantity.Value, NanowattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.NanowattPerCubicFoot, nanowattpercubicfootQuantity.Unit);

            var nanowattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.NanowattPerCubicInch);
            AssertEx.EqualTolerance(NanowattsPerCubicInchInOneWattPerCubicMeter, (double)nanowattpercubicinchQuantity.Value, NanowattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.NanowattPerCubicInch, nanowattpercubicinchQuantity.Unit);

            var nanowattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.NanowattPerCubicMeter);
            AssertEx.EqualTolerance(NanowattsPerCubicMeterInOneWattPerCubicMeter, (double)nanowattpercubicmeterQuantity.Value, NanowattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.NanowattPerCubicMeter, nanowattpercubicmeterQuantity.Unit);

            var nanowattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.NanowattPerLiter);
            AssertEx.EqualTolerance(NanowattsPerLiterInOneWattPerCubicMeter, (double)nanowattperliterQuantity.Value, NanowattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.NanowattPerLiter, nanowattperliterQuantity.Unit);

            var picowattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.PicowattPerCubicFoot);
            AssertEx.EqualTolerance(PicowattsPerCubicFootInOneWattPerCubicMeter, (double)picowattpercubicfootQuantity.Value, PicowattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.PicowattPerCubicFoot, picowattpercubicfootQuantity.Unit);

            var picowattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.PicowattPerCubicInch);
            AssertEx.EqualTolerance(PicowattsPerCubicInchInOneWattPerCubicMeter, (double)picowattpercubicinchQuantity.Value, PicowattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.PicowattPerCubicInch, picowattpercubicinchQuantity.Unit);

            var picowattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.PicowattPerCubicMeter);
            AssertEx.EqualTolerance(PicowattsPerCubicMeterInOneWattPerCubicMeter, (double)picowattpercubicmeterQuantity.Value, PicowattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.PicowattPerCubicMeter, picowattpercubicmeterQuantity.Unit);

            var picowattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.PicowattPerLiter);
            AssertEx.EqualTolerance(PicowattsPerLiterInOneWattPerCubicMeter, (double)picowattperliterQuantity.Value, PicowattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.PicowattPerLiter, picowattperliterQuantity.Unit);

            var terawattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.TerawattPerCubicFoot);
            AssertEx.EqualTolerance(TerawattsPerCubicFootInOneWattPerCubicMeter, (double)terawattpercubicfootQuantity.Value, TerawattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.TerawattPerCubicFoot, terawattpercubicfootQuantity.Unit);

            var terawattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.TerawattPerCubicInch);
            AssertEx.EqualTolerance(TerawattsPerCubicInchInOneWattPerCubicMeter, (double)terawattpercubicinchQuantity.Value, TerawattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.TerawattPerCubicInch, terawattpercubicinchQuantity.Unit);

            var terawattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.TerawattPerCubicMeter);
            AssertEx.EqualTolerance(TerawattsPerCubicMeterInOneWattPerCubicMeter, (double)terawattpercubicmeterQuantity.Value, TerawattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.TerawattPerCubicMeter, terawattpercubicmeterQuantity.Unit);

            var terawattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.TerawattPerLiter);
            AssertEx.EqualTolerance(TerawattsPerLiterInOneWattPerCubicMeter, (double)terawattperliterQuantity.Value, TerawattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.TerawattPerLiter, terawattperliterQuantity.Unit);

            var wattpercubicfootQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.WattPerCubicFoot);
            AssertEx.EqualTolerance(WattsPerCubicFootInOneWattPerCubicMeter, (double)wattpercubicfootQuantity.Value, WattsPerCubicFootTolerance);
            Assert.Equal(PowerDensityUnit.WattPerCubicFoot, wattpercubicfootQuantity.Unit);

            var wattpercubicinchQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.WattPerCubicInch);
            AssertEx.EqualTolerance(WattsPerCubicInchInOneWattPerCubicMeter, (double)wattpercubicinchQuantity.Value, WattsPerCubicInchTolerance);
            Assert.Equal(PowerDensityUnit.WattPerCubicInch, wattpercubicinchQuantity.Unit);

            var wattpercubicmeterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.WattPerCubicMeter);
            AssertEx.EqualTolerance(WattsPerCubicMeterInOneWattPerCubicMeter, (double)wattpercubicmeterQuantity.Value, WattsPerCubicMeterTolerance);
            Assert.Equal(PowerDensityUnit.WattPerCubicMeter, wattpercubicmeterQuantity.Unit);

            var wattperliterQuantity = wattpercubicmeter.ToUnit(PowerDensityUnit.WattPerLiter);
            AssertEx.EqualTolerance(WattsPerLiterInOneWattPerCubicMeter, (double)wattperliterQuantity.Value, WattsPerLiterTolerance);
            Assert.Equal(PowerDensityUnit.WattPerLiter, wattperliterQuantity.Unit);
        }

        [Fact]
        public void To_UnitSystem_ThrowsArgumentExceptionIfNotSupported()
        {
            var wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);

            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.SI));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.CGS));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.BI));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.EE));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.USC));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.FPS));
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.ToUnit(UnitSystem.Astronomical));
        }

        [Fact]
        public void ToUnit_WithNullUnitSystem_ThrowsNullException()
        {
            var wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
 
            Assert.Throws<ArgumentNullException>(() => wattpercubicmeter.ToUnit(null));
        }

        [Fact]
        public void ConversionRoundTrip()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            AssertEx.EqualTolerance(1, PowerDensity.FromDecawattsPerCubicFoot(wattpercubicmeter.DecawattsPerCubicFoot).WattsPerCubicMeter, DecawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDecawattsPerCubicInch(wattpercubicmeter.DecawattsPerCubicInch).WattsPerCubicMeter, DecawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDecawattsPerCubicMeter(wattpercubicmeter.DecawattsPerCubicMeter).WattsPerCubicMeter, DecawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDecawattsPerLiter(wattpercubicmeter.DecawattsPerLiter).WattsPerCubicMeter, DecawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDeciwattsPerCubicFoot(wattpercubicmeter.DeciwattsPerCubicFoot).WattsPerCubicMeter, DeciwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDeciwattsPerCubicInch(wattpercubicmeter.DeciwattsPerCubicInch).WattsPerCubicMeter, DeciwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDeciwattsPerCubicMeter(wattpercubicmeter.DeciwattsPerCubicMeter).WattsPerCubicMeter, DeciwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromDeciwattsPerLiter(wattpercubicmeter.DeciwattsPerLiter).WattsPerCubicMeter, DeciwattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromGigawattsPerCubicFoot(wattpercubicmeter.GigawattsPerCubicFoot).WattsPerCubicMeter, GigawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromGigawattsPerCubicInch(wattpercubicmeter.GigawattsPerCubicInch).WattsPerCubicMeter, GigawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromGigawattsPerCubicMeter(wattpercubicmeter.GigawattsPerCubicMeter).WattsPerCubicMeter, GigawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromGigawattsPerLiter(wattpercubicmeter.GigawattsPerLiter).WattsPerCubicMeter, GigawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromKilowattsPerCubicFoot(wattpercubicmeter.KilowattsPerCubicFoot).WattsPerCubicMeter, KilowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromKilowattsPerCubicInch(wattpercubicmeter.KilowattsPerCubicInch).WattsPerCubicMeter, KilowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromKilowattsPerCubicMeter(wattpercubicmeter.KilowattsPerCubicMeter).WattsPerCubicMeter, KilowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromKilowattsPerLiter(wattpercubicmeter.KilowattsPerLiter).WattsPerCubicMeter, KilowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMegawattsPerCubicFoot(wattpercubicmeter.MegawattsPerCubicFoot).WattsPerCubicMeter, MegawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMegawattsPerCubicInch(wattpercubicmeter.MegawattsPerCubicInch).WattsPerCubicMeter, MegawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMegawattsPerCubicMeter(wattpercubicmeter.MegawattsPerCubicMeter).WattsPerCubicMeter, MegawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMegawattsPerLiter(wattpercubicmeter.MegawattsPerLiter).WattsPerCubicMeter, MegawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMicrowattsPerCubicFoot(wattpercubicmeter.MicrowattsPerCubicFoot).WattsPerCubicMeter, MicrowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMicrowattsPerCubicInch(wattpercubicmeter.MicrowattsPerCubicInch).WattsPerCubicMeter, MicrowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMicrowattsPerCubicMeter(wattpercubicmeter.MicrowattsPerCubicMeter).WattsPerCubicMeter, MicrowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMicrowattsPerLiter(wattpercubicmeter.MicrowattsPerLiter).WattsPerCubicMeter, MicrowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMilliwattsPerCubicFoot(wattpercubicmeter.MilliwattsPerCubicFoot).WattsPerCubicMeter, MilliwattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMilliwattsPerCubicInch(wattpercubicmeter.MilliwattsPerCubicInch).WattsPerCubicMeter, MilliwattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMilliwattsPerCubicMeter(wattpercubicmeter.MilliwattsPerCubicMeter).WattsPerCubicMeter, MilliwattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromMilliwattsPerLiter(wattpercubicmeter.MilliwattsPerLiter).WattsPerCubicMeter, MilliwattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromNanowattsPerCubicFoot(wattpercubicmeter.NanowattsPerCubicFoot).WattsPerCubicMeter, NanowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromNanowattsPerCubicInch(wattpercubicmeter.NanowattsPerCubicInch).WattsPerCubicMeter, NanowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromNanowattsPerCubicMeter(wattpercubicmeter.NanowattsPerCubicMeter).WattsPerCubicMeter, NanowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromNanowattsPerLiter(wattpercubicmeter.NanowattsPerLiter).WattsPerCubicMeter, NanowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromPicowattsPerCubicFoot(wattpercubicmeter.PicowattsPerCubicFoot).WattsPerCubicMeter, PicowattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromPicowattsPerCubicInch(wattpercubicmeter.PicowattsPerCubicInch).WattsPerCubicMeter, PicowattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromPicowattsPerCubicMeter(wattpercubicmeter.PicowattsPerCubicMeter).WattsPerCubicMeter, PicowattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromPicowattsPerLiter(wattpercubicmeter.PicowattsPerLiter).WattsPerCubicMeter, PicowattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromTerawattsPerCubicFoot(wattpercubicmeter.TerawattsPerCubicFoot).WattsPerCubicMeter, TerawattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromTerawattsPerCubicInch(wattpercubicmeter.TerawattsPerCubicInch).WattsPerCubicMeter, TerawattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromTerawattsPerCubicMeter(wattpercubicmeter.TerawattsPerCubicMeter).WattsPerCubicMeter, TerawattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromTerawattsPerLiter(wattpercubicmeter.TerawattsPerLiter).WattsPerCubicMeter, TerawattsPerLiterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromWattsPerCubicFoot(wattpercubicmeter.WattsPerCubicFoot).WattsPerCubicMeter, WattsPerCubicFootTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromWattsPerCubicInch(wattpercubicmeter.WattsPerCubicInch).WattsPerCubicMeter, WattsPerCubicInchTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromWattsPerCubicMeter(wattpercubicmeter.WattsPerCubicMeter).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(1, PowerDensity.FromWattsPerLiter(wattpercubicmeter.WattsPerLiter).WattsPerCubicMeter, WattsPerLiterTolerance);
        }

        [Fact]
        public void ArithmeticOperators()
        {
            PowerDensity v = PowerDensity.FromWattsPerCubicMeter(1);
            AssertEx.EqualTolerance(-1, -v.WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(2, (PowerDensity.FromWattsPerCubicMeter(3)-v).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(2, (v + v).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(10, (v*10).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(10, (10*v).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(2, (PowerDensity.FromWattsPerCubicMeter(10)/5).WattsPerCubicMeter, WattsPerCubicMeterTolerance);
            AssertEx.EqualTolerance(2, PowerDensity.FromWattsPerCubicMeter(10)/PowerDensity.FromWattsPerCubicMeter(5), WattsPerCubicMeterTolerance);
        }

        [Fact]
        public void ComparisonOperators()
        {
            PowerDensity oneWattPerCubicMeter = PowerDensity.FromWattsPerCubicMeter(1);
            PowerDensity twoWattsPerCubicMeter = PowerDensity.FromWattsPerCubicMeter(2);

            Assert.True(oneWattPerCubicMeter < twoWattsPerCubicMeter);
            Assert.True(oneWattPerCubicMeter <= twoWattsPerCubicMeter);
            Assert.True(twoWattsPerCubicMeter > oneWattPerCubicMeter);
            Assert.True(twoWattsPerCubicMeter >= oneWattPerCubicMeter);

            Assert.False(oneWattPerCubicMeter > twoWattsPerCubicMeter);
            Assert.False(oneWattPerCubicMeter >= twoWattsPerCubicMeter);
            Assert.False(twoWattsPerCubicMeter < oneWattPerCubicMeter);
            Assert.False(twoWattsPerCubicMeter <= oneWattPerCubicMeter);
        }

        [Fact]
        public void CompareToIsImplemented()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            Assert.Equal(0, wattpercubicmeter.CompareTo(wattpercubicmeter));
            Assert.True(wattpercubicmeter.CompareTo(PowerDensity.Zero) > 0);
            Assert.True(PowerDensity.Zero.CompareTo(wattpercubicmeter) < 0);
        }

        [Fact]
        public void CompareToThrowsOnTypeMismatch()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            Assert.Throws<ArgumentException>(() => wattpercubicmeter.CompareTo(new object()));
        }

        [Fact]
        public void CompareToThrowsOnNull()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            Assert.Throws<ArgumentNullException>(() => wattpercubicmeter.CompareTo(null));
        }

        [Fact]
        public void EqualityOperators()
        {
            var a = PowerDensity.FromWattsPerCubicMeter(1);
            var b = PowerDensity.FromWattsPerCubicMeter(2);

 // ReSharper disable EqualExpressionComparison

            Assert.True(a == a);
            Assert.False(a != a);

            Assert.True(a != b);
            Assert.False(a == b);

            Assert.False(a == null);
            Assert.False(null == a);

// ReSharper restore EqualExpressionComparison
        }

        [Fact]
        public void EqualsIsImplemented()
        {
            var a = PowerDensity.FromWattsPerCubicMeter(1);
            var b = PowerDensity.FromWattsPerCubicMeter(2);

            Assert.True(a.Equals(a));
            Assert.False(a.Equals(b));
            Assert.False(a.Equals(null));
        }

        [Fact]
        public void EqualsRelativeToleranceIsImplemented()
        {
            var v = PowerDensity.FromWattsPerCubicMeter(1);
            Assert.True(v.Equals(PowerDensity.FromWattsPerCubicMeter(1), WattsPerCubicMeterTolerance, ComparisonType.Relative));
            Assert.False(v.Equals(PowerDensity.Zero, WattsPerCubicMeterTolerance, ComparisonType.Relative));
        }

        [Fact]
        public void EqualsReturnsFalseOnTypeMismatch()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            Assert.False(wattpercubicmeter.Equals(new object()));
        }

        [Fact]
        public void EqualsReturnsFalseOnNull()
        {
            PowerDensity wattpercubicmeter = PowerDensity.FromWattsPerCubicMeter(1);
            Assert.False(wattpercubicmeter.Equals(null));
        }

        [Fact]
        public void UnitsDoesNotContainUndefined()
        {
            Assert.DoesNotContain(PowerDensityUnit.Undefined, PowerDensity.Units);
        }

        [Fact]
        public void HasAtLeastOneAbbreviationSpecified()
        {
            var units = Enum.GetValues(typeof(PowerDensityUnit)).Cast<PowerDensityUnit>();
            foreach(var unit in units)
            {
                if(unit == PowerDensityUnit.Undefined)
                    continue;

                var defaultAbbreviation = UnitAbbreviationsCache.Default.GetDefaultAbbreviation(unit);
            }
        }

        [Fact]
        public void BaseDimensionsShouldNeverBeNull()
        {
            Assert.False(PowerDensity.BaseDimensions is null);
        }
    }
}
